# -*- coding: utf-8 -*-
"""House price prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UZwkoNdev6Yj0LJFcxqDMAj1Oeoumwgr
"""

from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score

class HousePricePredictor:
    def __init__(self):
        self.model = LinearRegression()

    def train(self, X_train, y_train):
        self.model.fit(X_train, y_train)

    def predict(self, X_test):
        return self.model.predict(X_test)

    def evaluate(self, y_test, y_pred):
        mse = mean_squared_error(y_test, y_pred)
        r2 = r2_score(y_test, y_pred)
        return mse, r2

# Example usage
if __name__ == "__main__":
    # Load data (replace with your actual data loading code)
    df = pd.read_csv("realtor.csv")
    X = df[['bed', 'bath', 'acre_lot', 'house_size']]
    y = df['price']

    # Split data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Create an instance of the predictor
    predictor = HousePricePredictor()

    # Train the model
    predictor.train(X_train, y_train)

    # Make predictions
    y_pred = predictor.predict(X_test)

    # Evaluate the model
    mse, r2 = predictor.evaluate(y_test, y_pred)

    # Print results
    print(f"Mean Squared Error: {mse}")
    print(f"R-squared: {r2}")